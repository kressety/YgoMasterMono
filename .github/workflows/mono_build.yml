name: Build and Release YgoMasterMonoServer

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4.1.7
    
    - name: Install Depandencies
      run: |
        sudo apt update
        sudo apt install -y mono-complete zip jq

    - name: Build with Mono
      run: xbuild YgoMaster.sln /p:Configuration=Debug /p:Platform=x64

    - name: Remove comments and update JSON files
      run: |
        python3 -c "
          import re
          import json
          
          def remove_comments(file_path):
              with open(file_path, 'r') as file:
                  content = file.read()
              content = re.sub(r'//.*', '', content)
              with open(file_path, 'w') as file:
                  file.write(content)
          
          def update_json(file_path, updates):
              with open(file_path, 'r') as file:
                  data = json.load(file)
              data.update(updates)
              with open(file_path, 'w') as file:
                  json.dump(data, file, indent=4)
          
          settings_path = 'YgoMaster/Data/Settings.json'
          
          remove_comments(settings_path)
          
          update_json(settings_path, {
              'MultiplayerEnabled': True,
              'SessionServerIP': '0.0.0.0',
              'MultiplayerPvpClientConnectIP': 'localhost',
              'BindIP': 'http://*:{BasePort}/',
              'BaseIP': '0.0.0.0'
          })
        "

    - name: Create release package
      run: |
        zip -r YgoMasterMonoServer.zip YgoMaster/Data YgoMaster/YgoMaster.exe

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.sha }}
        release_name: Release ${{ github.sha }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./YgoMasterMonoServer.zip
        asset_name: YgoMasterMonoServer.zip
        asset_content_type: application/zip
